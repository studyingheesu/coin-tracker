{"version":3,"sources":["api.ts","NavBar.tsx","routes/Chart.tsx","routes/Price.tsx","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","theme.ts","App.tsx","index.tsx"],"names":["BASE_URL","fetchCoins","fetch","then","response","json","MILLISECOND_TO_SECOND","GnbBox","styled","div","props","theme","accentColor","whiteColor","Title","h1","LeftButton","button","RightButton","NavBar","titleText","onClickBack","toggleDarkMode","isDarkMode","onClick","Chart","coinId","useQuery","nowInSecond","Math","floor","Date","now","twoWeekAgoInSecond","fetchCoinHistory","refetchInterval","isLoading","data","type","series","map","tick","x","time_open","y","open","high","low","close","height","options","mode","chart","yaxis","show","tooltip","enabled","xaxis","List","ul","Item","li","secondAccentColor","Price","price","ath_price","ath_date","percent_change_1h","percent_change_24h","percent_change_30d","Container","LoadingIndicator","span","Overview","primaryColor","OverviewItem","Description","p","Tabs","Tab","isOn","Coin","useParams","state","useLocation","priceMatch","useRouteMatch","chartMatch","fetchInfo","isLoadingInfo","info","fetchPrice","isLoadingPrice","priceInfo","name","history","useHistory","Helmet","goBack","rank","symbol","quotes","USD","toFixed","description","total_supply","max_supply","to","replace","path","CoinList","secondBgColor","darkTextColor","Icon","img","Coins","coins","slice","coin","pathname","id","src","toLowerCase","Router","lightTheme","bgColor","darkTheme","GlobalStyle","createGlobalStyle","App","useState","setIsDarkMode","prev","queryClient","QueryClient","ReactDOM","render","StrictMode","client","initialIsOpen","document","getElementById"],"mappings":"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","file":"static/js/main.f539ca30.chunk.js","sourcesContent":["const BASE_URL = `https://api.coinpaprika.com/v1`;\n\nexport const fetchCoins = () => {\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\n};\n\nexport const fetchInfo = (coinId: string) => {\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) => response.json());\n};\n\nexport const fetchPrice = (coinId: string) => {\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) => response.json());\n};\n\nconst MILLISECOND_TO_SECOND = 1000;\nconst SECOND_TO_WEEK = 60 * 60 * 24 * 7;\nexport const fetchCoinHistory = (coinId: string) => {\n  const nowInSecond = Math.floor(Date.now() / MILLISECOND_TO_SECOND);\n  const twoWeekAgoInSecond = Math.floor(\n    (Date.now() - MILLISECOND_TO_SECOND * SECOND_TO_WEEK * 2) / MILLISECOND_TO_SECOND\n  );\n\n  return fetch(`${BASE_URL}/coins/${coinId}/ohlcv/historical?start=${twoWeekAgoInSecond}&end=${nowInSecond}`).then(\n    (response) => response.json()\n  );\n};\n","import styled from 'styled-components';\n\ninterface NavProps {\n  titleText: string;\n  onClickBack?: () => void;\n  toggleDarkMode: () => void;\n  isDarkMode: boolean;\n}\n\nconst GnbBox = styled.div`\n  height: 72px;\n  background-color: ${(props) => props.theme.accentColor};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: ${(props) => props.theme.whiteColor};\n`;\n\nconst Title = styled.h1`\n  font-size: 24px;\n  flex: 1;\n  text-align: center;\n`;\n\n// should work on this\nconst LeftButton = styled.button`\n  display: block;\n  width: 100px;\n`;\nconst RightButton = styled.button`\n  display: block;\n  width: 100px;\n`;\n\nconst NavBar = ({ titleText, onClickBack, toggleDarkMode, isDarkMode }: NavProps) => {\n  return (\n    <GnbBox>\n      {onClickBack && <LeftButton onClick={onClickBack}>&larr</LeftButton>}\n      <Title>{titleText}</Title>\n      <RightButton onClick={toggleDarkMode}>{isDarkMode ? 'Light' : 'Dark'}</RightButton>\n    </GnbBox>\n  );\n};\n\nexport default NavBar;\n","import { useQuery } from 'react-query';\nimport ApexChart from 'react-apexcharts';\n\nimport { fetchCoinHistory } from '../api';\n\ninterface ICoinHistory {\n  time_open: string;\n  time_close: string;\n  open: number;\n  high: number;\n  low: number;\n  close: number;\n  volume: number;\n  market_cap: number;\n}\n\ninterface ChartProps {\n  coinId: string;\n  isDarkMode: boolean;\n}\n\nconst Chart = ({ coinId, isDarkMode }: ChartProps) => {\n  const { isLoading, data } = useQuery<ICoinHistory[]>(['ohlcv', coinId], () => fetchCoinHistory(coinId), {\n    refetchInterval: 5000,\n  });\n\n  return (\n    <div>\n      {isLoading ? (\n        'Loading chart...'\n      ) : (\n        <ApexChart\n          type=\"candlestick\"\n          series={[\n            {\n              data: data?.map((tick) => ({\n                x: new Date(tick.time_open),\n                y: [tick.open, tick.high, tick.low, tick.close],\n              })),\n            },\n          ]}\n          height={350}\n          options={{\n            theme: {\n              mode: isDarkMode ? 'dark' : 'light',\n            },\n            chart: {\n              type: 'candlestick',\n              height: 350,\n            },\n            yaxis: {\n              show: false,\n              tooltip: {\n                enabled: false,\n              },\n            },\n            xaxis: {\n              type: 'datetime',\n              tooltip: { enabled: false },\n            },\n          }}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Chart;\n","import styled from 'styled-components';\n\nconst List = styled.ul``;\n\nconst Item = styled.li`\n  padding: 10px;\n  margin: 20px 0;\n  background-color: ${(props) => props.theme.secondAccentColor};\n  border-radius: 10px;\n`;\n\ninterface PriceDetail {\n  ath_date: string;\n  ath_price: number;\n  market_cap: number;\n  market_cap_change_24h: number;\n  percent_change_1h: number;\n  percent_change_1y: number;\n  percent_change_6h: number;\n  percent_change_7d: number;\n  percent_change_12h: number;\n  percent_change_15m: number;\n  percent_change_24h: number;\n  percent_change_30d: number;\n  percent_change_30m: number;\n  percent_from_price_ath: number;\n  price: number;\n  volume_24h: number;\n  volume_24h_change_24h: number;\n}\n\nexport interface PriceTickData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  circulating_supply: number;\n  total_supply: number;\n  max_supply: number;\n  beta_value: number;\n  first_data_at: string;\n  last_updated: string;\n  quotes: {\n    USD: PriceDetail;\n  };\n}\n\ninterface PriceProps {\n  data?: PriceDetail;\n}\nconst Price = ({ data }: PriceProps) => {\n  if (!data) {\n    return <div>Loading...</div>;\n  }\n\n  const { price, ath_price, ath_date, percent_change_1h, percent_change_24h, percent_change_30d } = data;\n\n  return (\n    <div>\n      <List>\n        <Item>Price: ${price}</Item>\n        <Item>Changed {percent_change_1h}% in 1 hour</Item>\n        <Item>Changed {percent_change_24h}% in 1 day</Item>\n        <Item>Changed {percent_change_30d}% in 1 month</Item>\n        <Item>\n          All-time high: ${ath_price}\n          <br />\n          at {ath_date}\n        </Item>\n      </List>\n    </div>\n  );\n};\n\nexport default Price;\n","import { Helmet } from 'react-helmet';\nimport { useQuery } from 'react-query';\nimport { Link, Route, Switch, useHistory, useLocation, useParams, useRouteMatch } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchInfo, fetchPrice } from '../api';\nimport NavBar from '../NavBar';\nimport Chart from './Chart';\nimport Price, { PriceTickData } from './Price';\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\nconst LoadingIndicator = styled.span`\n  text-align: center;\n`;\n\nconst Overview = styled.div`\n  display: flex;\n  justify-content: space-between;\n  background-color: ${(props) => props.theme.primaryColor};\n  color: ${(props) => props.theme.whiteColor};\n  padding: 10px 20px;\n  border-radius: 10px;\n`;\nconst OverviewItem = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  span:first-child {\n    font-size: 10px;\n    font-weight: 400;\n    text-transform: uppercase;\n    margin-bottom: 5px;\n  }\n`;\nconst Description = styled.p`\n  margin: 20px 0px;\n`;\nconst Tabs = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  margin: 25px 0px;\n  gap: 10px;\n`;\n\nconst Tab = styled.span<{ isOn: boolean }>`\n  text-align: center;\n  text-transform: uppercase;\n  font-size: 12px;\n  font-weight: 400;\n  background-color: ${(props) => (props.isOn ? props.theme.accentColor : props.theme.primaryColor)};\n  padding: 7px 0px;\n  border-radius: 10px;\n  color: ${(props) => props.theme.whiteColor};\n  a {\n    display: block;\n  }\n`;\n\ninterface RouteParams {\n  coinId: string;\n}\ninterface RouteState {\n  name: string;\n}\n\ninterface InfoData {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n  description: string;\n  message: string;\n  open_source: boolean;\n  started_at: string;\n  development_status: string;\n  hardware_wallet: boolean;\n  proof_type: string;\n  org_structure: string;\n  hash_algorithm: string;\n  first_data_at: string;\n  last_data_at: string;\n}\n\ninterface CoinProps {\n  isDarkMode: boolean;\n  toggleDarkMode: () => void;\n}\n\nconst Coin = ({ isDarkMode, toggleDarkMode }: CoinProps) => {\n  const { coinId } = useParams<RouteParams>();\n  const { state } = useLocation<RouteState>();\n\n  const priceMatch = useRouteMatch('/:coinId/price');\n  const chartMatch = useRouteMatch('/:coinId/chart');\n\n  const { isLoading: isLoadingInfo, data: info } = useQuery<InfoData>(['info', coinId], () => fetchInfo(coinId));\n  const { isLoading: isLoadingPrice, data: priceInfo } = useQuery<PriceTickData>(\n    ['price', coinId],\n    () => fetchPrice(coinId),\n    { refetchInterval: 20000 } // this affects children re-render, so I can't stay at one point on the chart if interval is too short. // how to fix??\n  );\n\n  const isLoading = isLoadingInfo || isLoadingPrice;\n  const titleText = state?.name ? state.name : isLoading ? 'Loading...' : info?.name || '';\n\n  const history = useHistory();\n  const onClickBack = () => history.goBack();\n\n  return (\n    <>\n      <Helmet>\n        <title>{titleText}</title>\n      </Helmet>\n      <NavBar\n        titleText={titleText}\n        onClickBack={() => onClickBack()}\n        toggleDarkMode={toggleDarkMode}\n        isDarkMode={isDarkMode}\n      />\n      <Container>\n        {isLoading ? (\n          <LoadingIndicator>Loading...</LoadingIndicator>\n        ) : (\n          <>\n            <Overview>\n              <OverviewItem>\n                <span>Rank:</span>\n                <span>{info?.rank}</span>\n              </OverviewItem>\n              <OverviewItem>\n                <span>Symbol:</span>\n                <span>${info?.symbol}</span>\n              </OverviewItem>\n              <OverviewItem>\n                <span>Price:</span>\n                <span>${priceInfo?.quotes.USD.price.toFixed(3)}</span>\n              </OverviewItem>\n            </Overview>\n            <Description>{info?.description}</Description>\n            <Overview>\n              <OverviewItem>\n                <span>Total Suply:</span>\n                <span>{priceInfo?.total_supply}</span>\n              </OverviewItem>\n              <OverviewItem>\n                <span>Max Supply:</span>\n                <span>{priceInfo?.max_supply}</span>\n              </OverviewItem>\n            </Overview>\n            <Tabs>\n              <Tab isOn={priceMatch !== null}>\n                <Link to={`/${coinId}/price`} replace>\n                  Price\n                </Link>\n              </Tab>\n              <Tab isOn={chartMatch !== null}>\n                <Link to={`/${coinId}/chart`} replace>\n                  Chart\n                </Link>\n              </Tab>\n            </Tabs>\n            <Switch>\n              <Route path={`/:coinId/price`}>\n                <Price data={priceInfo?.quotes.USD} />\n              </Route>\n              <Route path={`/:coinId/chart`}>\n                <Chart coinId={coinId} isDarkMode={isDarkMode} />\n              </Route>\n            </Switch>\n          </>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Coin;\n","import { Helmet } from 'react-helmet';\nimport { useQuery } from 'react-query';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { fetchCoins } from '../api';\nimport NavBar from '../NavBar';\n\nconst Container = styled.div`\n  padding: 10px 20px;\n`;\n\nconst CoinList = styled.ul``;\n\nconst Coin = styled.li`\n  background-color: ${(props) => props.theme.secondBgColor};\n  color: ${(props) => props.theme.darkTextColor};\n  border-radius: 15px;\n  margin-bottom: 10px;\n  a {\n    padding: 20px;\n    transition: color 0.2s ease-in;\n    display: flex;\n    align-items: center;\n  }\n  &:hover {\n    a {\n      color: ${(props) => props.theme.accentColor};\n    }\n  }\n`;\n\nconst LoadingIndicator = styled.span`\n  text-align: center;\n`;\n\nconst Icon = styled.img`\n  width: 35px;\n  height: 35px;\n  margin-right: 10px;\n`;\ninterface CoinInterface {\n  id: string;\n  name: string;\n  symbol: string;\n  rank: number;\n  is_new: boolean;\n  is_active: boolean;\n  type: string;\n}\n\ninterface CoinsProps {\n  toggleDarkMode: () => void;\n  isDarkMode: boolean;\n}\n\nconst Coins = ({ toggleDarkMode, isDarkMode }: CoinsProps) => {\n  const titleText = '코인';\n  const { isLoading, data: coins } = useQuery<CoinInterface[]>('coins', fetchCoins);\n\n  return (\n    <>\n      <Helmet>\n        <title>{titleText}</title>\n      </Helmet>\n      <NavBar titleText={titleText} toggleDarkMode={toggleDarkMode} isDarkMode={isDarkMode} />\n      <Container>\n        {isLoading ? (\n          <LoadingIndicator>Loading...</LoadingIndicator>\n        ) : (\n          <CoinList>\n            {coins?.slice(0, 100).map((coin) => (\n              <Coin key={coin.id}>\n                <Link\n                  to={{\n                    pathname: `/${coin.id}`,\n                    state: { name: coin.name },\n                  }}\n                >\n                  <Icon src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`} />\n                  {coin.name} &rarr;\n                </Link>\n              </Coin>\n            ))}\n          </CoinList>\n        )}\n      </Container>\n    </>\n  );\n};\n\nexport default Coins;\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Coin from './routes/Coin';\nimport Coins from './routes/Coins';\n\ninterface IRouterProps {\n  toggleDarkMode: () => void;\n  isDarkMode: boolean;\n}\nconst Router = ({ toggleDarkMode, isDarkMode }: IRouterProps) => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path=\"/:coinId\">\n          <Coin isDarkMode={isDarkMode} toggleDarkMode={toggleDarkMode} />\n        </Route>\n        <Route path=\"/\">\n          <Coins toggleDarkMode={toggleDarkMode} isDarkMode={isDarkMode} />\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import { DefaultTheme } from 'styled-components';\n\nexport const lightTheme: DefaultTheme = {\n  bgColor: 'rgba(189, 195, 199, 0.5)',\n  secondAccentColor: 'rgba(241, 196, 15, 0.5)',\n  secondBgColor: 'white',\n  primaryColor: '#e67e22',\n  whiteColor: 'white',\n  darkTextColor: '#2c3e50',\n  accentColor: '#e74c3c',\n};\n\nexport const darkTheme: DefaultTheme = {\n  bgColor: 'rgba(44, 62, 80,1.0)',\n  secondAccentColor: '',\n  secondBgColor: 'rgba(149, 165, 166,1.0)',\n  primaryColor: 'rgba(211, 84, 0,1.0)',\n  whiteColor: '#2c3e50',\n  darkTextColor: 'white',\n  accentColor: 'rgba(192, 57, 43,1.0)',\n};\n","import { useState } from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport Router from './Router';\nimport { darkTheme, lightTheme } from './theme';\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR:wght@300;400&display=swap');\n\n/* http://meyerweb.com/eric/tools/css/reset/ \n   v2.0 | 20110126\n   License: none (public domain)\n*/\n\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\n\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-family: 'Noto Sans KR', sans-serif;\n  background-color: ${(props) => props.theme.bgColor};\n  color:${(props) => props.theme.darkTextColor}\n}\na{\n  text-decoration: none;\n\tcolor: inherit;\n}\n`;\n\nfunction App() {\n  const [isDarkMode, setIsDarkMode] = useState(false);\n  const toggleDarkMode = () => setIsDarkMode((prev) => !prev);\n\n  return (\n    <>\n      <ThemeProvider theme={isDarkMode ? darkTheme : lightTheme}>\n        <GlobalStyle />\n        <Router toggleDarkMode={toggleDarkMode} isDarkMode={isDarkMode} />\n      </ThemeProvider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport { ReactQueryDevtools } from 'react-query/devtools';\n\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <App />\n      <ReactQueryDevtools initialIsOpen={true} />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}